#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define BASE 0
#define MOUSE 1
#define SYMBOL 2
#define NUMBER 3
#define FUNCTION 4
#define GAME 5
#define RESET 6
#define KEYS_L 0 1 2 3 4 10 11 12 13 14 20 21 22 23 24
#define KEYS_R 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29
#define THUMBS 30 31 32 33 34 35

&sk {
    release-after-ms = <600>;
    quick-release;
};

&sl { ignore-modifiers; };

&mt { flavor = "tap-preferred"; };

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
    quick-tap-ms = <175>;
};

&caps_word { /delete-property/ ignore-modifiers; };

/ {
    behaviors {
        hml: hml {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr: hmr {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <250>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hml_s: hml_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        hmr_s: hmr_s {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <2000>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <0>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
            bindings = <&kp>, <&kp>;
        };

        smart_shift: smart_shift {
            compatible = "zmk,behavior-mod-morph";
            #binding-cells = <0>;
            bindings = <&sk LSHIFT>, <&caps_word>;

            mods = <(MOD_LSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";
        timeout-ms = <20>;
        require-prior-idle-ms = <250>;

        combo_normal {
            key-positions = <7 8>;
            bindings = <&to 0>;
        };

        combo_fn {
            key-positions = <27 28>;
            bindings = <&sl 4>;
        };

        combo_genshin {
            key-positions = <5 9>;
            bindings = <&to 5>;
        };

        combo_esc {
            key-positions = <1 2>;
            bindings = <&kp ESCAPE>;
        };

        combo_tab {
            key-positions = <2 3>;
            bindings = <&kp TAB>;
        };

        combo_cdel {
            key-positions = <11 12>;
            bindings = <&kp LC(BACKSPACE)>;
        };
    };

    chosen { zmk,physical-layout = &charybdis_6col_layout; };

    keymap {
        compatible = "zmk,keymap";

        //&trans &kp ESC        &kp Q       &kp W      &kp E     &kp R           &kp T   &kp Y  &kp U           &kp I        &kp O     &kp P      &kp LBKT   &trans
        //&mt LCTRL TAB  &kp A       &kp S      &kp D     &kp F           &kp G   &kp H  &kp J           &kp K        &kp L     &kp SEMI   &kp SQT
        //&kp LSHFT      &kp Z       &kp X      &kp C     &kp V           &kp B   &kp N  &kp M           &kp COMMA    &kp DOT   &kp FSLH   &mt RALT GRAVE
        //               &kp LGUI    &mo 1      &lt NAVI RET              &kp SPACE       &kp BSPC    &kp CAPSLOCK

        Base {
            display-name = "Base";
            bindings = <
&kp ESC         &kp Q  &kp W  &kp E       &kp R      &kp T          &kp Y        &kp U     &kp I      &kp O    &kp P     &kp LBKT
&kp TAB         &kp A  &kp S  &kp D       &kp F      &kp G          &kp H        &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LEFT_SHIFT  &kp Z  &kp X  &kp C       &kp V      &kp B          &kp N        &kp M     &kp COMMA  &kp DOT  &kp FSLH  &lt 1 RBKT
                              &lt 4 LWIN  &kp LCTRL  &lt 3 SPACE    &lt 2 ENTER  &kp BSPC
            >;
        };

        Mouse {
            display-name = "Mouse";
            bindings = <
&trans  &trans    &trans    &trans     &trans     &trans      &trans  &trans    &trans    &trans    &trans  &trans
&trans  &kp LGUI  &kp LALT  &kp LSHFT  &kp LCTRL  &trans      &trans  &mkp MB1  &mkp MB2  &mkp MB3  &trans  &trans
&trans  &trans    &trans    &none      &none      &trans      &trans  &trans    &trans    &trans    &trans  &trans
                            &mkp MB1   &mkp MB2   &mkp MB3    &trans  &trans
            >;
        };

        Sym {
            display-name = "Symbol";
            bindings = <
&trans  &none  &none  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE        &kp GRAVE  &kp TILDE  &kp LESS_THAN  &kp GREATER_THAN  &kp BACKSLASH      &trans
&trans  &none  &none  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp COLON       &kp PLUS   &kp MINUS  &kp SLASH      &kp ASTRK         &kp SINGLE_QUOTE   &trans
&trans  &none  &none  &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp QUESTION    &kp AMPS   &kp EQUAL  &kp UNDER      &kp PERIOD        &kp DOUBLE_QUOTES  &trans
                      &none                 &none                  &trans          &kp COMMA  &kp SEMI
            >;
        };

        Num {
            display-name = "Number";
            bindings = <
&trans  &none     &kp N7          &kp N8           &kp N9           &none            &none          &kp PG_UP          &kp UP             &kp PG_DN          &none     &trans
&trans  &kp LGUI  &hml_s LALT N4  &hml_s LSHFT N5  &hml_s LCTRL N6  &none            &none          &hmr_s RCTRL LEFT  &hmr_s RSHFT DOWN  &hmr_s RALT RIGHT  &kp RGUI  &trans
&trans  &none     &kp N1          &kp N2           &kp N3           &kp LC(MINUS)    &kp LC(EQUAL)  &kp HOME           &trans             &kp END            &none     &trans
                                  &kp DOT          &kp N0           &kp SPACE        &trans         &none
            >;
        };

        Fun {
            display-name = "Function";
            bindings = <
&trans  &kp LC(LA(DEL))  &kp F7  &kp F8  &kp F9  &kp F10    &none            &none      &none      &none     &none     &trans
&trans  &none            &kp F4  &kp F5  &kp F6  &kp F11    &kp PRINTSCREEN  &kp LCTRL  &kp LSHFT  &kp LALT  &kp LGUI  &trans
&trans  &none            &kp F1  &kp F2  &kp F3  &kp F12    &none            &none      &none      &none     &none     &trans
                                 &none   &none   &none      &none            &none
            >;
        };

        Button {
            display-name = "Game";
            bindings = <
&trans  &kp ESCAPE  &kp Q  &kp W     &kp E      &kp R    &none   &none     &none     &none     &none   &trans
&trans  &kp LCTRL   &kp A  &kp S     &kp D      &kp F    &none   &mkp MB1  &mkp MB2  &mkp MB3  &none   &trans
&trans  &kp LSHIFT  &kp Z  &kp X     &kp C      &kp V    &kp N1  &kp N2    &kp N3    &kp N4    &kp N5  &trans
                           &kp LALT  &kp SPACE  &kp M    &kp T   &kp B
            >;
        };
    };
};
